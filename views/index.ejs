<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Geo Helper</title>
    <link rel="stylesheet" href="main.css">
    <link rel="stylesheet" href="styles.css">
    <link rel="stylesheet" href="styles2.css">
    <link rel="stylesheet" href="cards.css">
    <link rel="shortcut icon" type="image/png" href="favicon.png">
    <style>
    @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap');
    @import url('https://fonts.googleapis.com/css2?family=Playwrite+IT+Moderna:wght@100..400&display=swap');
    /* Estilos para o modal */
.custom-modal {
  display: none; /* Ocultar por padrão */
  position: fixed;
  z-index: 1;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: auto;
  background-color: rgba(0,0,0,0.5); /* Fundo semi-transparente */
}

.custom-modal .modal-content {
  background-color: #fefefe;
  margin: 15% auto;
  padding: 20px;
  border: 1px solid #888;
  width: 40%;
  text-align: center;
}

.custom-modal .close-btn {
  color: #aaa;
  float: right;
  font-size: 28px;
  font-weight: bold;
}

.custom-modal .close-btn:hover,
.custom-modal .close-btn:focus {
  color: black;
  text-decoration: none;
  cursor: pointer;
}
    </style>
    
    <script src="https://kit.fontawesome.com/57c017c42a.js" crossorigin="anonymous"></script>
</head>
<body>

    <!-- Cabeçalho -->
    <header class="header">
        <div class="titulo-Icon">
            <i class="fa-solid fa-earth-americas" style="font-size: 50px;"></i>
            <h1>Geo Helper</h1>
        </div>
        <div class="hamburguer-menu" onclick="toggleMenu()">
            <div class="bar"></div>
            <div class="bar"></div>
            <div class="bar"></div>
        </div>
    <div class="hamburguer-nav">
        <div class="fechar-menu" aria-label="Fechar menu">×</div> 
        
        <nav class="header-nav">
            <ul>
                <li><a href="#" id="link-login" onclick="toggleLogin()">Fazer Login</a></li>
                <li>
                    <a href="/" id="myLink"><span id="spanText" style="cursor: pointer;"></span></a>
                </li>
                <li><a href="https://www.geoguessr.com/multiplayer" target="_blank">Jogar</a></li>
            </ul>
        </nav>
    </div>    

        <div id="myModal" class="modal">
            <div class="modal-content">
                <span class="close" onclick="hideLogin()">&times;</span>
                <p style="font: bold;"><strong>Login: </strong><strong><span id="usernameSpan" style="color: blue; font-size: 20px;"></span></strong></p>
                <p style="font: bold;"><strong>Criado em: </strong><strong><span id="createdAtSpan" style="color: blue; font-size: 20px;"></span></strong></p>
                <div class="fds" style="display: none;">
                    <a href="#" id="botao-info-login" onclick="showChangePasswordForm()">Alterar a senha</a>
                    <a href="/logout">Logout</a>
                </div>
            </div>
        </div>
    </header>

    <div id="container" class="container"></div>

    <div id="overlay" class="overlay">
<div class="login">
<div class="login-interno">
        <div class="tabs">
            <button class="tab-link active" onclick="openTab(event, 'login')">Login</button>
            <button class="tab-link" onclick="openTab(event, 'register')">Registrar</button>
        </div>
        <!-- Conteúdo das abas -->
        <div id="login" class="tab-content active">
        <div class="formulario-login">  
            <form id="login-form" onsubmit="return validateLoginForm()">
                <h2>Fazer Login</h2>
                <input type="text" name="username" placeholder="Usuário" required>
                <input type="password" name="password" placeholder="Senha" required>
                <button type="submit">Entrar</button>
                <p id="login-error-message" style="color: red; display: none;"></p>
            </form>
        </div>
    </div>
        <div id="register" class="tab-content">
    <div class="formulario-login">
            <form id="register-form">
                <h2>Registrar</h2>
                <input type="text" name="name" placeholder="Nome" maxlength="15" required>
                <input type="text" name="username" placeholder="Usuário" minlength="5" required>
                <input type="password" name="password" placeholder="Senha" minlength="5" required>
                <button type="submit">Registrar</button>
                <p id="register-message" style="display: none;"></p>
            </form>
    </div>
</div>
</div>
        <button class="tab-link cancel" onclick="hideLogin()">Fechar</button>
    </div>


</div>  
    <!-- Overlay para alterar senha -->
    <div id="changePasswordOverlay" class="custom-overlay" style="display: none;">
        <div class="custom-modal-content">
            <span class="custom-close" onclick="hideChangePasswordForm()">&times;</span>
            <h2>Alterar Senha</h2>
            <form id="changePasswordForm">
                <label for="currentPassword">Senha Atual:</label>
                <input type="password" id="currentPassword" name="currentPassword" maxlength="15" required><br>
                <label for="newPassword">Nova Senha:</label>
                <input type="password" id="newPassword" name="newPassword" maxlength="15"required><br>
                <label for="confirmPassword">Confirmar Nova Senha:</label>
                <input type="password" id="confirmPassword" name="confirmPassword" maxlength="15"required><br>
                <button type="button" onclick="changePassword()">Alterar Senha</button>
                <p id="changePasswordMessage" style="color: red; display: none;"></p>
            </form>
        </div>
    </div>

 

<!--<p>Alterar</p>-->





















<div class="main-content">
        <div class="concept concept-one">
          <div class="hover hover-1"></div>
          <div class="hover hover-2"></div>
          <div class="hover hover-3"></div>
          <div class="hover hover-4"></div>
          <div class="hover hover-5"></div>
          <div class="hover hover-6"></div>
          <div class="hover hover-7"></div>
          <div class="hover hover-8"></div>
          <div class="hover hover-9"></div>
          <h1 style="color: azure;">Qual objetivo desse projeto?</h1>
          <p>Auxiliar jogadores de geoguessr em todo o mundo nas suas partidas, sendo um helper. Temos uma <strong style="color: aqua;">API</strong> poderosa implantada que foi desenvolvida por nós, que funciona como um grande filtro complexo e completo, que é atualizado frequentemente. Facilitando sua jogatina</p>
          <i class="fa-solid fa-arrow-down" style="font-size: 25px; color: azure;"></i><h4><strong style="color: aqua;">Funciona Assim</strong></h4><i class="fa-solid fa-arrow-down" style="font-size: 25px; color: azure;"></i>
        </div>













        <div class="concept concept-four">
          <div class="mae">
         <h1 style="color: black;">Serviços</h1> 
    <div class="cards-play">
        <a href="/simples" alt="Geoguessr-busca" target="">
            <div class="card">
              <div class="wrapper">
                <img src="/image/card.png" class="cover-image" />
              </div>
              <img src="/image/texto.png" class="title" />
              <img src="/image/objeto-card1.png" class="character" />
            </div>
          </a>
          
          <a href="/" alt="Mythrill" target="_blank">
            <div class="card">
              <div class="wrapper">
                <img src="/image/card2.png" class="cover-image" />
              </div>
              <img src="/image/texto2.png" class="title" />
              <img src="/image/objeto-card2.png" class="character" />
            </div>
          </a>
    
          <a href="/" alt="Mythrill" target="_blank">
            <div class="card">
              <div class="wrapper">
                <img src="/image/card3.png" class="cover-image" />
              </div>
              <img src="/image/texto3.png" class="title" />
              <img src="/image/objeto-card3.png" class="character" />
            </div>
          </a>
        </div>
    </div>
    
    
    
    
    
    
    
        </div>






















        <div class="concept concept-three">
          <div class="word">
            <div class="hover">
              <div></div>
              <div></div>
              <h1>D</h1>
            </div>
            <div class="hover">
              <div></div>
              <div></div>
              <h1>U</h1>
            </div>
            <div class="hover">
              <div></div>
              <div></div>
              <h1>V</h1>
            </div>
            <div class="hover">
                <div></div>
                <div></div>
                <h1>I</h1>
              </div>
              <div class="hover">
                <div></div>
                <div></div>
                <h1>D</h1>
              </div>
              <div class="hover">
                <div></div>
                <div></div>
                <h1>A</h1>
              </div>
              <div class="hover">
                <div></div>
                <div></div>
                <h1>S</h1>
              </div>
          </div>
        </div>
        <div class="concept concept-six">
          <h1 class="word"><span class="char">C</span><span class="char">O</span><span class="char">N</span><span class="char">T</span><span class="char">A</span><span class="char">T</span><span class="char">O</span>
          </h1>
        </div>
</div>
   <!-- Video -->
<div class="video-background" id="myVideo">
    <video id="myVideo" autoplay muted loop><source src="/video/video.mp4" type="video/mp4"> Seu navegador não suporta vídeos HTML5.</video>
</div>



























    <script>



// Event listener para o carregamento do DOM
document.addEventListener('DOMContentLoaded', function() {
    // Replace with actual values if using server-side templating
    var name = "<%= name %>";
    var username = "<%= username %>";
    var createdAt = "<%= createdAt %>";

    document.getElementById('spanText').textContent = name;
    document.getElementById('usernameSpan').textContent = username;
    document.getElementById('createdAtSpan').textContent = createdAt;

    if (username) {
        document.getElementById('link-login').style.display = 'none';
        document.querySelector('.fds').style.display = 'inline-block';
    }
});

// Função para validar o formulário de login
function validateLoginForm() {
    var username = document.querySelector('#login-form input[name="username"]').value;
    var password = document.querySelector('#login-form input[name="password"]').value;
    var errorMessage = document.getElementById('login-error-message');

    if (username === '' || password === '') {
        errorMessage.textContent = 'Por favor, preencha todos os campos.';
        errorMessage.style.display = 'block';
        return false; // Impede o envio do formulário
    } else {
        errorMessage.style.display = 'none';
        return true; // Permite o envio do formulário
    }
}

// Event listener para o formulário de login
document.getElementById('login-form').addEventListener('submit', function(event) {
    event.preventDefault(); // Impede o envio padrão do formulário

    var formData = {
        username: document.querySelector('#login-form input[name="username"]').value,
        password: document.querySelector('#login-form input[name="password"]').value
    };

    fetch('/login', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify(formData)
    })
    .then(response => {
        if (!response.ok) {
            throw new Error('Erro ao efetuar login. Status do servidor: ' + response.status);
        }
        // Verifique o tipo de conteúdo retornado (JSON ou texto)
        const contentType = response.headers.get('content-type');
        if (contentType && contentType.includes('application/json')) {
            return response.json(); // Se for JSON, parseie a resposta
        } else {
            return response.text(); // Se não for JSON, obtenha o texto da resposta
        }
    })
    .then(data => {
        // Aqui você pode decidir o que fazer com os dados retornados pelo servidor
        console.log('Resposta do servidor:', data);
        // Exibir mensagem de sucesso
        var successMessage = document.getElementById('login-error-message');
        successMessage.textContent = 'Login realizado com sucesso!';
        successMessage.style.color = 'green';
        successMessage.style.display = 'block';

        // Fechar o overlay após 1 segundo
        setTimeout(function() {
            hideLogin(); // Função para esconder o overlay de login
            location.reload(); // Recarrega a página
        }, 1000);
    })
    .catch(error => {
        var errorMessage = document.getElementById('login-error-message');
        if (error.message.includes('401')) {
            errorMessage.textContent = 'Senha inválida! Verifique seu usuário e senha.';
        } else {
            errorMessage.textContent = 'Erro ao processar a requisição: ' + error.message;
        }
        errorMessage.style.display = 'block';
        console.error('Erro:', error);
    });
});

// Event listener para o formulário de registro
document.getElementById('register-form').addEventListener('submit', function(event) {
    event.preventDefault(); // Impede o envio padrão do formulário

    var formData = {
        name: document.querySelector('#register-form input[name="name"]').value,
        username: document.querySelector('#register-form input[name="username"]').value,
        password: document.querySelector('#register-form input[name="password"]').value
    };

    fetch('/register', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify(formData)
    })
    .then(response => response.json())
    .then(data => {
        var messageElement = document.getElementById('register-message');
        messageElement.style.display = 'block';
        if (data.success) {
            // Mostrar mensagem de sucesso
            messageElement.style.color = 'green';
            messageElement.textContent = data.message;

            // Fechar o overlay após 1 segundo
            setTimeout(function() {
                hideRegister(); // Função para esconder o overlay de registro
                location.reload();
            }, 1000);
        } else {
            // Mostrar mensagem de erro
            messageElement.style.color = 'red';
            messageElement.textContent = data.message;
        }
    })
    .catch(error => {
        var messageElement = document.getElementById('register-message');
        messageElement.style.color = 'red';
        messageElement.textContent = 'Erro ao processar a requisição: ' + error.message;
        messageElement.style.display = 'block';
        console.error('Erro:', error);
    });
});

// Função para alternar a visibilidade do link de login
function toggleLogin() {
    var linkLogin = document.getElementById('link-login');
    linkLogin.style.display = 'none'; // Esconder o link de login
    var overlay = document.getElementById('overlay');
    overlay.style.display = 'flex'; // Mostrar o overlay de login
}

// Função para mostrar o overlay de alterar senha
function showChangePasswordForm() {
    var overlay = document.getElementById('changePasswordOverlay');
    overlay.style.display = 'flex';
}

// Função para validar e enviar a alteração de senha via AJAX
function changePassword() {
    var currentPassword = document.getElementById('currentPassword').value;
    var newPassword = document.getElementById('newPassword').value;
    var confirmPassword = document.getElementById('confirmPassword').value;
    var errorMessage = document.getElementById('changePasswordMessage');

    // Verifica se a nova senha e a confirmação são iguais
    if (newPassword !== confirmPassword) {
        errorMessage.textContent = 'Nova senha e confirmação não coincidem.';
        errorMessage.style.display = 'block';
        return;
    }

    var formData = {
        currentPassword: currentPassword,
        newPassword: newPassword,
        confirmPassword: confirmPassword
    };

    fetch('/change-password', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify(formData)
    })
    .then(response => response.json()) // Parseia a resposta como JSON
    .then(data => {
        errorMessage.textContent = data.message;
        errorMessage.style.color = data.success ? 'green' : 'red';
        errorMessage.style.display = 'block';

        if (data.success) {
            setTimeout(function() {
                hideChangePasswordForm();
                location.reload(); // Recarrega a página após a alteração bem-sucedida
            }, 2000); // Fecha o formulário após 2 segundos se a alteração for bem-sucedida
        }
    })
    .catch(error => {
        errorMessage.textContent = 'Erro ao processar a requisição: ' + error.message;
        errorMessage.style.display = 'block';
        console.error('Erro:', error);
    });
}


// Função para fechar a tela de login
function hideLogin() {
    var overlay = document.getElementById('overlay');
    overlay.style.display = 'none'; 
    location.reload();
}

// Função para fechar a tela de registro
function hideRegister() {
    var overlay = document.getElementById('overlay');
    overlay.style.display = 'none'; 
}

// Função para esconder o overlay de alterar senha
function hideChangePasswordForm() {
    var overlay = document.getElementById('changePasswordOverlay');
    overlay.style.display = 'none';
}

// Função para alternar entre as abas
function openTab(evt, tabName) {
    var i, tabContent, tabLinks;
    tabContent = document.getElementsByClassName("tab-content");
    for (i = 0; i < tabContent.length; i++) {
        tabContent[i].style.display = "none";
    }
    tabLinks = document.getElementsByClassName("tab-link");
    for (i = 0; i < tabLinks.length; i++) {
        tabLinks[i].className = tabLinks[i].className.replace(" active", "");
    }
    document.getElementById(tabName).style.display = "block";
    if (evt) {
        evt.currentTarget.className += " active";
    } else {
        var activeTabLink = document.querySelector('.tab-link[data-tab="' + tabName + '"]');
        activeTabLink.className += " active";
    }
}




// Exibir o modal quando a página carrega
document.addEventListener('DOMContentLoaded', function() {
  var modal = document.getElementById('loginModal');
  modal.style.display = 'block';
  
  // Fechar o modal se clicar no 'x' ou fora dele
  var closeBtn = document.querySelector('.custom-modal .close-btn');
  closeBtn.onclick = function() {
    modal.style.display = 'none';
    window.location.href = '/'; // Redirecionar após fechar o modal
  }
  window.onclick = function(event) {
    if (event.target == modal) {
      modal.style.display = 'none';
      window.location.href = '/'; // Redirecionar se clicar fora do modal
    }
  }
});








    </script>
    <script src="script.js"></script>
    
</body>
</html>
